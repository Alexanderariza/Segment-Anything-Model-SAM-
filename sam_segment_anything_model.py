# -*- coding: utf-8 -*-
"""SAM_segment_anything_model.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1cs4T9LfT4fcRvCYqJl39kLLfuj1YQZbL

Alexander Ariza üßëüèª‚Äçüíª  
Sent4Cas
Segmentaci√≥n de construcciones con SAM
"""

# Commented out IPython magic to ensure Python compatibility.
# %%capture
# !pip install segment-geospatial

import os
import leafmap
from samgeo import SamGeo, tms_to_geotiff

# Define variables
image = 'colombia_maptiler_area.tif'
result = 'results_maptiler.gpkg'

# Define the bounding box and zoom level
bbox = [-75.118032,9.718649,-75.114212,9.721853]
zoom = 20

# Define the TMS URL (MapTiler example)
tms_url = 'https://api.maptiler.com/maps/satellite/{z}/{x}/{y}.jpg?key=sfcMpHvW61zRJDeEy9Wb'

# Try converting TMS to GeoTIFF
try:
    print("Converting TMS to GeoTIFF...")
    tms_to_geotiff(output=image, bbox=bbox, zoom=zoom, source=tms_url, overwrite=True)
    print(f"GeoTIFF successfully created: {image}")
except Exception as e:
    print(f"An error occurred during TMS to GeoTIFF conversion: {e}")

# Initialize SamGeo with parameters
sam = SamGeo(
    checkpoint='sam_vit_h_4b8939.pth',  # Ruta al archivo del modelo
    model_type='vit_h',                 # Tipo de modelo
    device='cuda',                      # Dispositivo (puede ser 'cpu' o 'cuda')
    erosion_kernel=(3, 3),              # Par√°metro de erosi√≥n para el procesamiento de im√°genes
    mask_multiplier=255,                # Multiplicador para las m√°scaras
    sam_kwargs=None,
)

# Generate the segmentation and convert to GeoPackage
try:
    print("Generating segmentation...")
    sam.generate(image, 'segment_maptiler.tif')
    print("Segmented TIFF created: segment_maptiler.tif")

    print("Converting segmented TIFF to GeoPackage...")
    sam.tiff_to_gpkg('segment_maptiler.tif', result, simplify_tolerance=None)
    print(f"GeoPackage successfully created: {result}")
except Exception as e:
    print(f"An error occurred during segmentation or GeoPackage conversion: {e}")

m = leafmap.Map()
m.add_raster(image)

style = {'color': '#3388ff', 'weight': 2, 'fillColor': '#7c4185', 'fillOpacity': 0.5}
m.add_vector(result, style=style)
m